steps:
# Setup Env
- id: 'setup-environment'
  name: python
  entrypoint: bash
  args: ['-c', 'pip install -U dvc dvc[gs]; dvc pull; sudo apt-get unzip; cd data/; unzip testing.zip; cd ..;']

# Build & Push Trainer
- id: 'build-trainer-image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', $_TRAINER_IMAGE, '-f', 'dockerfiles/train.dockerfile', '.']
- id: 'push-trainer-image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', $_TRAINER_IMAGE]

# Deploy training container image to Cloud run
- id: 'deploy-trainer-to-vertex-ai'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
  - 'ai'
  - 'custom-jobs'
  - 'create'
  - '--region=europe-west1'
  - '--display-name=trainer-container'
  - '--config=gpu_trainer_config.yaml'

# Build & Push Predict Server
- id: 'build-predict-image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', $_PREDICT_IMAGE, '-f', 'dockerfiles/server.dockerfile', '.']
- id: 'push-predict-image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', $_PREDICT_IMAGE]

  # Deploy prediction server container image to Cloud Run
- id: 'deploy-server-to-google-cloud-run'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
  - 'run'
  - 'deploy'
  - 'predict-server'
  - '--image'
  - 'gcr.io/project-mloperations/predict_server:latest'
  - '--region'
  - 'europe-west1'
  - '--memory'
  - '2G'
  - '--allow-unauthenticated'
  - '--platform'
  - 'managed'
  - '--labels'
  - 'gcb-trigger-id=$_TRIGGER_ID'

substitutions:
  _TRAINER_IMAGE: gcr.io/project-mloperations/trainer
  _PREDICT_IMAGE: gcr.io/project-mloperations/predict_server
  _TRIGGER_ID: 3fb933a0-e96a-41d0-a739-f0935fe365d6

images:
  - '$_TRAINER_IMAGE'
  - '$_PREDICT_IMAGE'

